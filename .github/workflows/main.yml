name: build

on: [push, pull_request]

jobs:
  linux:
    if: contains(github.event.head_commit.message, '[ci skip]') == false
    strategy:
      matrix:
        r: [latest]
        # r: [3.5, latest, devel]
    runs-on: ubuntu-latest
    container:
      image: rocker/tidyverse:${{ matrix.r }}
      options: -v /tmp/languageserver:/tmp/languageserver
    env:
      NOT_CRAN: true
      R_LANGSVR_LOG: /tmp/languageserver/log
      R_LANGSVR_POOL_SIZE: 1
      R_LANGSVR_TEST_FAST: NO
    steps:
    - uses: actions/checkout@v1
    - name: Install apt-get dependencies
      run: |
        apt-get update
        apt-get install git ssh curl bzip2 libffi-dev -y
    - name: Install languagesever
      run: |
        Rscript -e "install.packages(c('remotes', 'rcmdcheck'), repos = 'https://cloud.r-project.org')"
        Rscript -e "remotes::install_deps(dependencies = TRUE)"
    - name: Running Tests
      run: |
        Rscript -e "rcmdcheck::rcmdcheck(args = c('--as-cran', '--no-manual', '--timings'), error_on = 'error')"
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: linux-log
        path: /tmp/languageserver

  macos:
    if: contains(github.event.head_commit.message, '[ci skip]') == false
    strategy:
      matrix:
        r: [latest]
        # r: [3.5, 3.6, devel]
    runs-on: macOS-latest
    env:
      NOT_CRAN: true
      R_LANGSVR_LOG: /tmp/languageserver/log
      R_LANGSVR_POOL_SIZE: 1
      R_LANGSVR_TEST_FAST: NO
    steps:
    - uses: actions/checkout@v1
    - uses: r-lib/actions/setup-r@v1
      with:
        r-version: ${{ matrix.r }}
    - name: Install languagesever
      run: |
        Rscript -e "install.packages(c('remotes', 'rcmdcheck'), repos = 'https://cloud.r-project.org', type = 'mac.binary')"
        Rscript -e "remotes::install_deps(dependencies = TRUE, type = 'mac.binary')"
    - name: Running Tests
      run: |
        mkdir -p /tmp/languageserver
        Rscript -e "rcmdcheck::rcmdcheck(args = c('--as-cran', '--no-manual', '--timings'), error_on = 'error')"
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: macos-log
        path: /tmp/languageserver

  windows:
    if: contains(github.event.head_commit.message, '[ci skip]') == false
    strategy:
      matrix:
        r: [latest]
        # r: [3.5, 3.6, devel]
    runs-on: windows-latest
    env:
      NOT_CRAN: true
      R_LANGSVR_LOG: C:/tmp/languageserver/log
      R_LANGSVR_POOL_SIZE: 1
      R_LANGSVR_TEST_FAST: NO
    steps:
    - uses: actions/checkout@v1
    - uses: r-lib/actions/setup-r@v1
      with:
        r-version: ${{ matrix.r }}
    - name: Install dependencies
      run: |
        Rscript -e "install.packages(c('remotes', 'devtools'), repos = 'https://cloud.r-project.org', type = 'win.binary')"
        Rscript -e "remotes::install_deps(dependencies = TRUE, type = 'win.binary')"
        # in Windows, we need to install a seperate copy for spawning server in the tests
        Rscript -e "devtools::install(type = 'win.binary')"
    - name: Running Tests
      run: |
        New-Item -ItemType directory -Path C:/tmp/languageserver
        Rscript -e "rcmdcheck::rcmdcheck(args = c('--as-cran', '--no-manual', '--timings'), error_on = 'error')"
    - uses: actions/upload-artifact@v1
      if: failure()
      with:
        name: windows-log
        path: C:/tmp/languageserver/log
